services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: allegro_postgres
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-allegro_orders}
      POSTGRES_USER: ${DATABASE_USER:-allegro_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-allegro_password}
    volumes:
      - $HOME/projects/allegro_orders_backup/postgres_data:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT:-5442}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-allegro_user} -d ${DATABASE_NAME:-allegro_orders}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: allegro_redis
    ports:
      - "${REDIS_PORT:-6389}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Main FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: allegro_app
    environment:
      - DATABASE_URL=postgresql://${DATABASE_USER:-allegro_user}:${DATABASE_PASSWORD:-allegro_password}@postgres:5432/${DATABASE_NAME:-allegro_orders}
      - DATABASE_HOST=postgres
      - REDIS_URL=redis://redis:6379/0
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    ports:
      - "${API_PORT:-8000}:8000"
    volumes:
      - ./logs:/app/logs
      - ./app:/app/app
      - ./alembic:/app/alembic
      - ./scripts:/app/scripts
      - ./alembic.ini:/app/alembic.ini
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    restart: unless-stopped

  # Celery Worker (универсальный, обслуживает все очереди)
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: allegro_celery_worker
    environment:
      - DATABASE_URL=postgresql://${DATABASE_USER:-allegro_user}:${DATABASE_PASSWORD:-allegro_password}@postgres:5432/${DATABASE_NAME:-allegro_orders}
      - DATABASE_HOST=postgres
      - REDIS_URL=redis://redis:6379/0
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./app:/app/app
      - ./alembic:/app/alembic
      - ./scripts:/app/scripts
      - ./alembic.ini:/app/alembic.ini
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["celery", "-A", "app.celery_app", "worker", "--loglevel=info"]
    restart: unless-stopped

  # Celery Beat Scheduler
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: allegro_celery_beat
    environment:
      - DATABASE_URL=postgresql://${DATABASE_USER:-allegro_user}:${DATABASE_PASSWORD:-allegro_password}@postgres:5432/${DATABASE_NAME:-allegro_orders}?options=-csearch_path=celery_schema,public
      - DATABASE_HOST=postgres
      - REDIS_URL=redis://redis:6379/0
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./app:/app/app
      - ./alembic:/app/alembic
      - ./scripts:/app/scripts
      - ./alembic.ini:/app/alembic.ini
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["celery", "-A", "app.celery_app", "beat", "--loglevel=info", "-S", "sqlalchemy_celery_beat.schedulers:DatabaseScheduler", "-l", "info"]
    restart: unless-stopped

  # Flower - Celery monitoring (optional)
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: allegro_flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - "5556:5555"
    depends_on:
      - redis
    command: ["celery", "-A", "app.celery_app", "flower", "--port=5555"]
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    external: false
    name: allegro_network