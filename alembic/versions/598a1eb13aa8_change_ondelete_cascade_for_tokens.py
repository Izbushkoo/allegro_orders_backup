"""change ondelete cascade for tokens

Revision ID: 598a1eb13aa8
Revises: da65ca0007e5
Create Date: 2025-07-30 11:43:38.882898

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlmodel import SQLModel
import sqlmodel


# revision identifiers, used by Alembic.
revision = "598a1eb13aa8"
down_revision = "da65ca0007e5"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("order_events", "token_id", existing_type=sa.UUID(), nullable=True)
    op.drop_constraint(
        op.f("order_events_token_id_fkey"), "order_events", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "order_events", "user_tokens", ["token_id"], ["id"], ondelete="CASCADE"
    )
    op.alter_column(
        "order_technical_flags", "token_id", existing_type=sa.UUID(), nullable=True
    )
    op.drop_constraint(
        op.f("order_technical_flags_token_id_fkey"),
        "order_technical_flags",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "order_technical_flags",
        "user_tokens",
        ["token_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.alter_column("orders", "token_id", existing_type=sa.UUID(), nullable=True)
    op.drop_constraint(op.f("orders_token_id_fkey"), "orders", type_="foreignkey")
    op.create_foreign_key(
        None, "orders", "user_tokens", ["token_id"], ["id"], ondelete="CASCADE"
    )
    op.alter_column("sync_history", "token_id", existing_type=sa.UUID(), nullable=True)
    op.drop_constraint(
        op.f("sync_history_token_id_fkey"), "sync_history", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "sync_history", "user_tokens", ["token_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "sync_history", type_="foreignkey")
    op.create_foreign_key(
        op.f("sync_history_token_id_fkey"),
        "sync_history",
        "user_tokens",
        ["token_id"],
        ["id"],
    )
    op.alter_column("sync_history", "token_id", existing_type=sa.UUID(), nullable=False)
    op.drop_constraint(None, "orders", type_="foreignkey")
    op.create_foreign_key(
        op.f("orders_token_id_fkey"), "orders", "user_tokens", ["token_id"], ["id"]
    )
    op.alter_column("orders", "token_id", existing_type=sa.UUID(), nullable=False)
    op.drop_constraint(None, "order_technical_flags", type_="foreignkey")
    op.create_foreign_key(
        op.f("order_technical_flags_token_id_fkey"),
        "order_technical_flags",
        "user_tokens",
        ["token_id"],
        ["id"],
    )
    op.alter_column(
        "order_technical_flags", "token_id", existing_type=sa.UUID(), nullable=False
    )
    op.drop_constraint(None, "order_events", type_="foreignkey")
    op.create_foreign_key(
        op.f("order_events_token_id_fkey"),
        "order_events",
        "user_tokens",
        ["token_id"],
        ["id"],
    )
    op.alter_column("order_events", "token_id", existing_type=sa.UUID(), nullable=False)
    # ### end Alembic commands ###
